.TH "Farsyte::Matrix::Matrix< Nc, Nr, T >" 3 "Mon Sep 22 2014" "The Farsyte Toolkit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Farsyte::Matrix::Matrix< Nc, Nr, T > \- 
.PP
\fBMatrix\fP Template\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <matrix_matrix\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::array< T, Nr *Nc > \fBA\fP"
.br
.RI "\fITypedef for array containing the data\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrix\fP ()"
.br
.RI "\fI\fBMatrix\fP Default Constructor\&. \fP"
.ti -1c
.RI "\fBMatrix\fP (T const &d)"
.br
.RI "\fI\fBMatrix\fP Diagonal Constructor\&. \fP"
.ti -1c
.RI "\fBMatrix\fP (\fBA\fP const &iv)"
.br
.RI "\fI\fBMatrix\fP Construction from Array of Arrays\&. \fP"
.ti -1c
.RI "\fBMatrix\fP (\fBMatrix\fP const &m)"
.br
.RI "\fIDuplicate \fBMatrix\fP Construction\&. \fP"
.ti -1c
.RI "T const & \fBoperator[]\fP (int i) const "
.br
.RI "\fIFast linear element access (read-only)\&. \fP"
.ti -1c
.RI "T & \fBoperator[]\fP (int i)"
.br
.RI "\fIFast linear element access (mutable)\&. \fP"
.ti -1c
.RI "T const & \fBoperator()\fP (int ri, int ci=0) const "
.br
.RI "\fI\fBMatrix\fP Subscripting Operator\&. \fP"
.ti -1c
.RI "T & \fBoperator()\fP (int ri, int ci=0)"
.br
.RI "\fI\fBMatrix\fP Subscripting Operator\&. \fP"
.ti -1c
.RI "bool \fBequals\fP (\fBMatrix\fP const &p) const "
.br
.RI "\fI\fBMatrix\fP Equality Test\&. \fP"
.ti -1c
.RI "\fBMatrix\fP & \fBincrement_by\fP (\fBMatrix\fP const &p)"
.br
.RI "\fI\fBMatrix\fP Increment operation\&. \fP"
.ti -1c
.RI "\fBMatrix\fP & \fBoperator+=\fP (\fBMatrix\fP const &p)"
.br
.RI "\fI\fBMatrix\fP Increment operator\&. \fP"
.ti -1c
.RI "\fBMatrix\fP & \fBdecrement_by\fP (\fBMatrix\fP const &p)"
.br
.RI "\fI\fBMatrix\fP Decrement operation\&. \fP"
.ti -1c
.RI "\fBMatrix\fP & \fBoperator-=\fP (\fBMatrix\fP const &p)"
.br
.RI "\fI\fBMatrix\fP Decrement operator\&. \fP"
.ti -1c
.RI "\fBMatrix\fP \fBnegate\fP ()"
.br
.RI "\fI\fBMatrix\fP Negate operation\&. \fP"
.ti -1c
.RI "\fBMatrix\fP< Nr, Nc, T > \fBtranspose\fP () const "
.br
.RI "\fI\fBMatrix\fP Transpose operation\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static int \fBrows\fP ()"
.br
.RI "\fI\fBMatrix\fP rows\&. \fP"
.ti -1c
.RI "static int \fBcols\fP ()"
.br
.RI "\fI\fBMatrix\fP columns\&. \fP"
.ti -1c
.RI "static int \fBsize\fP ()"
.br
.RI "\fI\fBMatrix\fP elements\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "int \fBoff\fP (int ri, int ci) const "
.br
.RI "\fI\fBMatrix\fP subscript to offset calculation\&. \fP"
.ti -1c
.RI "T const & \fBdata\fP (int ri, int ci=0) const "
.br
.RI "\fI\fBMatrix\fP Subscripting Implementation\&. \fP"
.ti -1c
.RI "T & \fBdata\fP (int ri, int ci=0)"
.br
.RI "\fI\fBMatrix\fP Subscripting Implementation\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBA\fP \fBa\fP"
.br
.RI "\fIStorage for \fBMatrix\fP State\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<int Nc, int Nr, typename T>class Farsyte::Matrix::Matrix< Nc, Nr, T >"
\fBMatrix\fP Template\&. 


.PP
\fBParameters:\fP
.RS 4
\fINc\fP Number of columns in the matrix\&. 
.br
\fINr\fP Number of rows in the matrix\&. 
.br
\fIT\fP Data type for each matrix element\&.
.RE
.PP
This template implements rectangular matrices of a compile-time determined size, containing elements of compile-time determined type\&. 
.PP
Definition at line 29 of file matrix_matrix\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<int Nc, int Nr, typename T> \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::\fBMatrix\fP ()\fC [inline]\fP"

.PP
\fBMatrix\fP Default Constructor\&. \fBMatrix\fP objects that are default-constructed are assured of having each element appropriately initialized\&. 
.PP
Definition at line 95 of file matrix_matrix\&.h\&.
.PP
.nf
96                     : a() {
97             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::\fBMatrix\fP (T const &d)\fC [inline]\fP"

.PP
\fBMatrix\fP Diagonal Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fId\fP Value to copy into each diagonal element\&. 
.RE
.PP

.PP
Definition at line 102 of file matrix_matrix\&.h\&.
.PP
.nf
103                     : a() {
104                 for (int i = 0; (i < Nr) && (i < Nc); ++i)
105                     data(i, i) = d;
106             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::\fBMatrix\fP (\fBA\fP const &iv)\fC [inline]\fP"

.PP
\fBMatrix\fP Construction from Array of Arrays\&. 
.PP
\fBParameters:\fP
.RS 4
\fIiv\fP initialization vector\&. This method is used by subclasses to provide value construction of Matrices using appropriately sized and shaped initialization vectors\&. 
.RE
.PP
\fBNote:\fP
.RS 4
Not a public interface: only classes within the class heirarchy below \fBMatrix\fP should be aware of the data organization within the \fBMatrix\fP object\&. 
.RE
.PP

.PP
Definition at line 117 of file matrix_matrix\&.h\&.
.PP
.nf
118                     : a(iv) {
119             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::\fBMatrix\fP (\fBMatrix\fP< Nc, Nr, T > const &m)\fC [inline]\fP"

.PP
Duplicate \fBMatrix\fP Construction\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBMatrix\fP to duplicate\&. Initialize this matrix to duplicate the data contained in the provided matrix\&. 
.RE
.PP

.PP
Definition at line 126 of file matrix_matrix\&.h\&.
.PP
.nf
127                     : a(m\&.a) {
128             }
.fi
.SH "Member Function Documentation"
.PP 
.SS "template<int Nc, int Nr, typename T> static int \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::cols ()\fC [inline]\fP, \fC [static]\fP"

.PP
\fBMatrix\fP columns\&. 
.PP
\fBReturns:\fP
.RS 4
number of columns \fCNc\fP in tha matrix\&. 
.RE
.PP

.PP
Definition at line 46 of file matrix_matrix\&.h\&.
.PP
Referenced by Farsyte::Matrix::Matrix< 1, Nr, double >::size()\&.
.PP
.nf
46                               {
47                 return Nc;
48             }
.fi
.SS "template<int Nc, int Nr, typename T> T const& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::data (intri, intci = \fC0\fP) const\fC [inline]\fP, \fC [protected]\fP"

.PP
\fBMatrix\fP Subscripting Implementation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIri\fP Row Index, ranging from 1 to Nr inclusive\&. 
.br
\fIci\fP Column Index, ranging from 1 to Nc inclusive\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a read-only reference to the selected element\&. 
.RE
.PP
\fBNote:\fP
.RS 4
Fortran conventions for array subscripting\&. 
.RE
.PP

.PP
Definition at line 75 of file matrix_matrix\&.h\&.
.PP
Referenced by Farsyte::Matrix::Matrix< 1, Nr, double >::decrement_by(), Farsyte::Matrix::Matrix< 1, Nr, double >::equals(), Farsyte::Matrix::Matrix< 1, Nr, double >::increment_by(), Farsyte::Matrix::Matrix< 1, Nr, double >::Matrix(), Farsyte::Matrix::Matrix< 1, Nr, double >::negate(), Farsyte::Matrix::Matrix< 1, Nr, double >::operator()(), and Farsyte::Matrix::Matrix< 1, Nr, double >::transpose()\&.
.PP
.nf
75                                                     {
76                 return a[off(ri, ci)];
77             }
.fi
.SS "template<int Nc, int Nr, typename T> T& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::data (intri, intci = \fC0\fP)\fC [inline]\fP, \fC [protected]\fP"

.PP
\fBMatrix\fP Subscripting Implementation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIri\fP Row Index, ranging from 1 to Nr inclusive\&. 
.br
\fIci\fP Column Index, ranging from 1 to Nc inclusive\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a writable reference to the selected element\&. 
.RE
.PP
\fBNote:\fP
.RS 4
Fortran conventions for array subscripting\&. 
.RE
.PP

.PP
Definition at line 85 of file matrix_matrix\&.h\&.
.PP
.nf
85                                         {
86                 return a[off(ri, ci)];
87             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBMatrix\fP& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::decrement_by (\fBMatrix\fP< Nc, Nr, T > const &p)\fC [inline]\fP"

.PP
\fBMatrix\fP Decrement operation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP \fBMatrix\fP of decrement values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
this matrix, after decrementing\&. Each element of this matrix is decremented by the value of the corresponding element of the provided matrix\&. 
.RE
.PP

.PP
Definition at line 210 of file matrix_matrix\&.h\&.
.PP
Referenced by Farsyte::Matrix::Matrix< 1, Nr, double >::operator-=()\&.
.PP
.nf
210                                                   {
211                 for (int ci = 0; ci < Nc; ++ci)
212                     for (int ri = 0; ri < Nr; ++ri)
213                         data(ri, ci) -= p\&.data(ri, ci);
214                 return *this;
215             }
.fi
.SS "template<int Nc, int Nr, typename T> bool \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::equals (\fBMatrix\fP< Nc, Nr, T > const &p) const\fC [inline]\fP"

.PP
\fBMatrix\fP Equality Test\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP \fBMatrix\fP to compare\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
true if all elements compare equal, else false\&. 
.RE
.PP

.PP
Definition at line 170 of file matrix_matrix\&.h\&.
.PP
.nf
170                                                {
171                 for (int ci = 0; ci < Nc; ++ci)
172                     for (int ri = 0; ri < Nr; ++ri)
173                         if (data(ri, ci) != p\&.data(ri, ci))
174                             return false;
175                 return true;
176             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBMatrix\fP& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::increment_by (\fBMatrix\fP< Nc, Nr, T > const &p)\fC [inline]\fP"

.PP
\fBMatrix\fP Increment operation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP \fBMatrix\fP of increment values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
this matrix, after incrementing\&. Each element of this matrix is incremented by the value of the corresponding element of the provided matrix\&. 
.RE
.PP

.PP
Definition at line 185 of file matrix_matrix\&.h\&.
.PP
Referenced by Farsyte::Matrix::Matrix< 1, Nr, double >::operator+=()\&.
.PP
.nf
185                                                   {
186                 for (int ci = 0; ci < Nc; ++ci)
187                     for (int ri = 0; ri < Nr; ++ri)
188                         data(ri, ci) += p\&.data(ri, ci);
189                 return *this;
190             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBMatrix\fP \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::negate ()\fC [inline]\fP"

.PP
\fBMatrix\fP Negate operation\&. 
.PP
\fBReturns:\fP
.RS 4
self after negating elements\&. 
.RE
.PP

.PP
Definition at line 231 of file matrix_matrix\&.h\&.
.PP
.nf
231                             {
232                 for (int ci = 0; ci < Nc; ++ci)
233                     for (int ri = 0; ri < Nr; ++ri)
234                         data(ri, ci) = -data(ri, ci);
235                 return *this;
236             }
.fi
.SS "template<int Nc, int Nr, typename T> T const& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::operator() (intri, intci = \fC0\fP) const\fC [inline]\fP"

.PP
\fBMatrix\fP Subscripting Operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIri\fP Row Index, in the range 1 to Nr inclusive\&. 
.br
\fIci\fP Column Index, in the range 1 to Nc inclusive\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
read-only reference to the selected element\&. 
.RE
.PP
\fBNote:\fP
.RS 4
Fortran conventions for array subscripting\&. 
.RE
.PP

.PP
Definition at line 152 of file matrix_matrix\&.h\&.
.PP
.nf
152                                                           {
153                 return data(ri, ci);
154             }
.fi
.SS "template<int Nc, int Nr, typename T> T& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::operator() (intri, intci = \fC0\fP)\fC [inline]\fP"

.PP
\fBMatrix\fP Subscripting Operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIri\fP Row Index, in the range 1 to Nr inclusive\&. 
.br
\fIci\fP Column Index, in the range 1 to Nc inclusive\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
modifiable reference to the selected element\&. 
.RE
.PP
\fBNote:\fP
.RS 4
Fortran conventions for array subscripting\&. 
.RE
.PP

.PP
Definition at line 162 of file matrix_matrix\&.h\&.
.PP
.nf
162                                               {
163                 return data(ri, ci);
164             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBMatrix\fP& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::operator+= (\fBMatrix\fP< Nc, Nr, T > const &p)\fC [inline]\fP"

.PP
\fBMatrix\fP Increment operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP \fBMatrix\fP of increment values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
this matrix, after incrementing\&. Each element of this matrix is incremented by the value of the corresponding element of the provided matrix\&. 
.RE
.PP

.PP
Definition at line 199 of file matrix_matrix\&.h\&.
.PP
.nf
199                                                 {
200                 return increment_by(p);
201             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBMatrix\fP& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::operator-= (\fBMatrix\fP< Nc, Nr, T > const &p)\fC [inline]\fP"

.PP
\fBMatrix\fP Decrement operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP \fBMatrix\fP of decrement values\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
this matrix, after decrementing\&. Each element of this matrix is decremented by the value of the corresponding element of the provided matrix\&. 
.RE
.PP

.PP
Definition at line 224 of file matrix_matrix\&.h\&.
.PP
.nf
224                                                 {
225                 return decrement_by(p);
226             }
.fi
.SS "template<int Nc, int Nr, typename T> T const& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::operator[] (inti) const\fC [inline]\fP"

.PP
Fast linear element access (read-only)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP element index\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
an element within the matrix\&. 
.RE
.PP

.PP
Definition at line 134 of file matrix_matrix\&.h\&.
.PP
.nf
134                                              {
135                 return a[i];
136             }
.fi
.SS "template<int Nc, int Nr, typename T> T& \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::operator[] (inti)\fC [inline]\fP"

.PP
Fast linear element access (mutable)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP element index\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
an element within the matrix\&. 
.RE
.PP

.PP
Definition at line 142 of file matrix_matrix\&.h\&.
.PP
.nf
142                                  {
143                 return a[i];
144             }
.fi
.SS "template<int Nc, int Nr, typename T> static int \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::rows ()\fC [inline]\fP, \fC [static]\fP"

.PP
\fBMatrix\fP rows\&. 
.PP
\fBReturns:\fP
.RS 4
number of rows \fCNr\fP in tha matrix\&. 
.RE
.PP

.PP
Definition at line 39 of file matrix_matrix\&.h\&.
.PP
Referenced by Farsyte::Matrix::Matrix< 1, Nr, double >::size()\&.
.PP
.nf
39                               {
40                 return Nr;
41             }
.fi
.SS "template<int Nc, int Nr, typename T> static int \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::size ()\fC [inline]\fP, \fC [static]\fP"

.PP
\fBMatrix\fP elements\&. 
.PP
\fBReturns:\fP
.RS 4
number of elements \fCNr*Nc\fP in the matrix\&. 
.RE
.PP

.PP
Definition at line 53 of file matrix_matrix\&.h\&.
.PP
.nf
53                               {
54                 return rows() * cols();
55             }
.fi
.SS "template<int Nc, int Nr, typename T> \fBMatrix\fP<Nr, Nc, T> \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::transpose () const\fC [inline]\fP"

.PP
\fBMatrix\fP Transpose operation\&. 
.PP
\fBReturns:\fP
.RS 4
transposed matrix\&. 
.RE
.PP

.PP
Definition at line 242 of file matrix_matrix\&.h\&.
.PP
.nf
242                               {
243                 Matrix<Nr, Nc, T> R;
244                 for (int ci = 0; ci < Nc; ++ci)
245                     for (int ri = 0; ri < Nr; ++ri)
246                         R(ci, ri) = data(ri, ci);
247                 return R;
248             }
.fi
.SH "Member Data Documentation"
.PP 
.SS "template<int Nc, int Nr, typename T> \fBA\fP \fBFarsyte::Matrix::Matrix\fP< Nc, Nr, T >::a\fC [protected]\fP"

.PP
Storage for \fBMatrix\fP State\&. 
.PP
Definition at line 252 of file matrix_matrix\&.h\&.
.PP
Referenced by Farsyte::Matrix::Matrix< 1, Nr, double >::data(), and Farsyte::Matrix::Matrix< 1, Nr, double >::operator[]()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for The Farsyte Toolkit from the source code\&.
